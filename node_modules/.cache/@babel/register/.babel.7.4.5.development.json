{
  "{\"sourceRoot\":\"/home/ales/projects/sharedredux-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ales/projects/sharedredux-server\",\"filename\":\"/home/ales/projects/sharedredux-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ales/projects/sharedredux-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ales/projects/sharedredux-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/ales/projects/sharedredux-server",
      "filename": "/home/ales/projects/sharedredux-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ales/projects/sharedredux-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ales/projects/sharedredux-server/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ales/projects/sharedredux-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ales/projects/sharedredux-server/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _Container = _interopRequireWildcard(require(\"./Container\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PORT = 3333;\n\nvar server = _http[\"default\"].createServer(_express[\"default\"]);\n\nvar io = (0, _socket[\"default\"])(server);\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD\":\n      return _objectSpread({}, state, {\n        serval: state.serval + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar data_container = new _Container[\"default\"]({\n  defaultState: {\n    serval: 21,\n    value: 1\n  },\n  reducer: reducer\n});\nsetInterval(function () {\n  data_container.dispatch({\n    type: \"ADD\"\n  });\n}, 1000);\nvar ns_1 = io.of(\"/container_1\");\nns_1.on('connection', function (socket) {\n  (0, _Container.connectContainer)(data_container, socket);\n});\nconsole.log(\"START LISTENING ON PORT \".concat(PORT));\nserver.listen(PORT);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBPUlQiLCJzZXJ2ZXIiLCJodHRwIiwiY3JlYXRlU2VydmVyIiwiYXBwIiwiaW8iLCJyZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwic2VydmFsIiwiZGF0YV9jb250YWluZXIiLCJDb250YWluZXIiLCJkZWZhdWx0U3RhdGUiLCJ2YWx1ZSIsInNldEludGVydmFsIiwiZGlzcGF0Y2giLCJuc18xIiwib2YiLCJvbiIsInNvY2tldCIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUcsSUFBYjs7QUFJQSxJQUFNQyxNQUFNLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCQyxtQkFBbEIsQ0FBZjs7QUFFQSxJQUFNQyxFQUFFLEdBQUcsd0JBQVNKLE1BQVQsQ0FBWDs7QUFFQSxJQUFNSyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDQyxLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDL0IsVUFBT0EsTUFBTSxDQUFDQyxJQUFkO0FBQ0ksU0FBSyxLQUFMO0FBQ0ksK0JBQVdGLEtBQVg7QUFBa0JHLFFBQUFBLE1BQU0sRUFBRUgsS0FBSyxDQUFDRyxNQUFOLEdBQWE7QUFBdkM7O0FBQ0o7QUFDSSxhQUFPSCxLQUFQO0FBSlI7QUFNSCxDQVBEOztBQVNBLElBQU1JLGNBQWMsR0FBRyxJQUFJQyxxQkFBSixDQUFjO0FBQUNDLEVBQUFBLFlBQVksRUFBRTtBQUFDSCxJQUFBQSxNQUFNLEVBQUUsRUFBVDtBQUFhSSxJQUFBQSxLQUFLLEVBQUU7QUFBcEIsR0FBZjtBQUF1Q1IsRUFBQUEsT0FBTyxFQUFQQTtBQUF2QyxDQUFkLENBQXZCO0FBRUFTLFdBQVcsQ0FBQyxZQUFNO0FBQ2RKLEVBQUFBLGNBQWMsQ0FBQ0ssUUFBZixDQUF3QjtBQUNwQlAsSUFBQUEsSUFBSSxFQUFFO0FBRGMsR0FBeEI7QUFHSCxDQUpVLEVBSVIsSUFKUSxDQUFYO0FBTUEsSUFBTVEsSUFBSSxHQUFHWixFQUFFLENBQUNhLEVBQUgsQ0FBTSxjQUFOLENBQWI7QUFDQUQsSUFBSSxDQUFDRSxFQUFMLENBQVEsWUFBUixFQUFzQixVQUFBQyxNQUFNLEVBQUk7QUFDNUIsbUNBQWlCVCxjQUFqQixFQUFpQ1MsTUFBakM7QUFDSCxDQUZEO0FBSUFDLE9BQU8sQ0FBQ0MsR0FBUixtQ0FBdUN0QixJQUF2QztBQUNBQyxNQUFNLENBQUNzQixNQUFQLENBQWN2QixJQUFkIiwic291cmNlUm9vdCI6Ii9ob21lL2FsZXMvcHJvamVjdHMvc2hhcmVkcmVkdXgtc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJztcbmltcG9ydCBzb2NrZXRpbyBmcm9tICdzb2NrZXQuaW8nO1xuaW1wb3J0IENvbnRhaW5lciwge2Nvbm5lY3RDb250YWluZXJ9IGZyb20gJy4vQ29udGFpbmVyJztcblxuY29uc3QgUE9SVCA9IDMzMzM7XG5cblxuXG5jb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApO1xuXG5jb25zdCBpbyA9IHNvY2tldGlvKHNlcnZlcik7XG5cbmNvbnN0IHJlZHVjZXIgPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgIHN3aXRjaChhY3Rpb24udHlwZSl7XG4gICAgICAgIGNhc2UgXCJBRERcIjpcbiAgICAgICAgICAgIHJldHVybiB7Li4uc3RhdGUsIHNlcnZhbDogc3RhdGUuc2VydmFsKzF9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn1cblxuY29uc3QgZGF0YV9jb250YWluZXIgPSBuZXcgQ29udGFpbmVyKHtkZWZhdWx0U3RhdGU6IHtzZXJ2YWw6IDIxLCB2YWx1ZTogMX0sIHJlZHVjZXJ9KTtcblxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGRhdGFfY29udGFpbmVyLmRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogXCJBRERcIlxuICAgIH0pO1xufSwgMTAwMCk7XG5cbmNvbnN0IG5zXzEgPSBpby5vZihcIi9jb250YWluZXJfMVwiKTtcbm5zXzEub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4geyBcbiAgICBjb25uZWN0Q29udGFpbmVyKGRhdGFfY29udGFpbmVyLCBzb2NrZXQpO1xufSk7XG5cbmNvbnNvbGUubG9nKGBTVEFSVCBMSVNURU5JTkcgT04gUE9SVCAke1BPUlR9YClcbnNlcnZlci5saXN0ZW4oUE9SVCk7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PORT",
        "server",
        "http",
        "createServer",
        "app",
        "io",
        "reducer",
        "state",
        "action",
        "type",
        "serval",
        "data_container",
        "Container",
        "defaultState",
        "value",
        "setInterval",
        "dispatch",
        "ns_1",
        "of",
        "on",
        "socket",
        "console",
        "log",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAb;;AAIA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBC,mBAAlB,CAAf;;AAEA,IAAMC,EAAE,GAAG,wBAASJ,MAAT,CAAX;;AAEA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,KAAL;AACI,+BAAWF,KAAX;AAAkBG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAa;AAAvC;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPD;;AASA,IAAMI,cAAc,GAAG,IAAIC,qBAAJ,CAAc;AAACC,EAAAA,YAAY,EAAE;AAACH,IAAAA,MAAM,EAAE,EAAT;AAAaI,IAAAA,KAAK,EAAE;AAApB,GAAf;AAAuCR,EAAAA,OAAO,EAAPA;AAAvC,CAAd,CAAvB;AAEAS,WAAW,CAAC,YAAM;AACdJ,EAAAA,cAAc,CAACK,QAAf,CAAwB;AACpBP,IAAAA,IAAI,EAAE;AADc,GAAxB;AAGH,CAJU,EAIR,IAJQ,CAAX;AAMA,IAAMQ,IAAI,GAAGZ,EAAE,CAACa,EAAH,CAAM,cAAN,CAAb;AACAD,IAAI,CAACE,EAAL,CAAQ,YAAR,EAAsB,UAAAC,MAAM,EAAI;AAC5B,mCAAiBT,cAAjB,EAAiCS,MAAjC;AACH,CAFD;AAIAC,OAAO,CAACC,GAAR,mCAAuCtB,IAAvC;AACAC,MAAM,CAACsB,MAAP,CAAcvB,IAAd",
      "sourceRoot": "/home/ales/projects/sharedredux-server/src",
      "sourcesContent": [
        "import app from 'express';\nimport http from 'http';\nimport socketio from 'socket.io';\nimport Container, {connectContainer} from './Container';\n\nconst PORT = 3333;\n\n\n\nconst server = http.createServer(app);\n\nconst io = socketio(server);\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case \"ADD\":\n            return {...state, serval: state.serval+1};\n        default:\n            return state;\n    }\n}\n\nconst data_container = new Container({defaultState: {serval: 21, value: 1}, reducer});\n\nsetInterval(() => {\n    data_container.dispatch({\n        type: \"ADD\"\n    });\n}, 1000);\n\nconst ns_1 = io.of(\"/container_1\");\nns_1.on('connection', socket => { \n    connectContainer(data_container, socket);\n});\n\nconsole.log(`START LISTENING ON PORT ${PORT}`)\nserver.listen(PORT);\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561258154925
  },
  "{\"sourceRoot\":\"/home/ales/projects/sharedredux-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ales/projects/sharedredux-server\",\"filename\":\"/home/ales/projects/sharedredux-server/src/Container.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ales/projects/sharedredux-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ales/projects/sharedredux-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/ales/projects/sharedredux-server",
      "filename": "/home/ales/projects/sharedredux-server/src/Container.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ales/projects/sharedredux-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ales/projects/sharedredux-server/src/Container.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ales/projects/sharedredux-server/src/Container.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ales/projects/sharedredux-server/src",
        "sourceFileName": "Container.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectContainer = connectContainer;\nexports[\"default\"] = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _fastJsonPatch = require(\"fast-json-patch\");\n\nvar _jsonpatch = require(\"jsonpatch\");\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DEBUG = true;\nvar ActionTypes = {\n  ACTION_MERGE: \"@@MERGE_CLIENT\"\n};\n\nvar actionDiff = function actionDiff(diff, client) {\n  return {\n    type: ActionTypes.ACTION_MERGE,\n    payload: {\n      diff: diff,\n      client: client\n    }\n  };\n};\n\nvar defaultReducer = function defaultReducer(state) {\n  return state;\n};\n\nvar Container =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Container, _EventEmitter);\n\n  function Container() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$middlewares = _ref.middlewares,\n        middlewares = _ref$middlewares === void 0 ? [] : _ref$middlewares,\n        _ref$defaultState = _ref.defaultState,\n        defaultState = _ref$defaultState === void 0 ? {} : _ref$defaultState,\n        _ref$stateAccessor = _ref.stateAccessor,\n        stateAccessor = _ref$stateAccessor === void 0 ? function (s) {\n      return s;\n    } : _ref$stateAccessor,\n        _ref$dispatch = _ref.dispatch,\n        dispatch = _ref$dispatch === void 0 ? undefined : _ref$dispatch,\n        _ref$reducer = _ref.reducer,\n        reducer = _ref$reducer === void 0 ? defaultReducer : _ref$reducer;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this));\n    _this._stateAccessor = stateAccessor;\n\n    var self = _assertThisInitialized(_this);\n\n    var newreducer = function newreducer() {\n      var oldstate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n      var action = arguments.length > 1 ? arguments[1] : undefined;\n      var state = reducer(oldstate, action);\n\n      if (oldstate != state) {\n        var diff = (0, _fastJsonPatch.compare)(oldstate, state);\n        self.emit('change', {\n          diff: diff\n        });\n      }\n\n      switch (action.type) {\n        case ActionTypes.ACTION_MERGE:\n          var _action$payload = action.payload,\n              _diff = _action$payload.diff,\n              client = _action$payload.client;\n          var retstate = state;\n\n          try {\n            retstate = (0, _jsonpatch.apply_patch)(state, _diff); //notify change for other clients\n\n            self.emit('change', {\n              diff: _diff,\n              client: client\n            });\n          } catch (e) {\n            //error during change >> revert client data\n            self.emit(\"replace_\".concat(client.id), state);\n          }\n\n          return retstate;\n\n        default:\n          return state;\n      }\n    }; //here place your middlewares\n\n\n    _this.store = (0, _redux.createStore)(newreducer, (0, _redux.compose)(_redux.applyMiddleware.apply(void 0, _toConsumableArray(middlewares)) // other store enhancers if any\n    ));\n    _this.dispatch = dispatch || _this.store.dispatch.bind(_this.store);\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"change\",\n    value: function change(data, client) {\n      if (data.diff) {\n        this.dispatch(actionDiff(data.diff, client));\n      }\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      return this.dispatch(action);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this._stateAccessor(this.store.getState());\n    }\n  }]);\n\n  return Container;\n}(_events[\"default\"]);\n\nvar _default = Container;\nexports[\"default\"] = _default;\n\nfunction connectContainer(data_container, socket) {\n  var client = {\n    id: (0, _v[\"default\"])()\n  };\n\n  var log = function log() {\n    var _console;\n\n    for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n      msg[_key] = arguments[_key];\n    }\n\n    if (DEBUG) (_console = console).log.apply(_console, [\"\".concat(client.id, \":\")].concat(msg));\n  };\n\n  var sendChange = function sendChange(data) {\n    if (!data.client || data.client.id === client.id) return;\n    log(\"EMIT change\", data);\n    socket.emit('change', data);\n  };\n\n  var sendReplace = function sendReplace(state) {\n    var data = {\n      data: state || data_container.getState()\n    };\n    log(\"EMIT replace\", data);\n    socket.emit('replace', data);\n  };\n\n  data_container.on('change', sendChange);\n  data_container.on(\"replace_\".concat(client.id), sendReplace); //send replace on connect\n\n  sendReplace();\n  socket.on('change', function (data) {\n    log(\"RECV change\", data);\n    data_container.change(data, client);\n    log(data_container.getState());\n  });\n  socket.on('requestReplace', function (data) {\n    log(\"RECV requestReplace\", data);\n    sendReplace();\n  });\n  socket.on('disconnect', function () {\n    log(\"destroy event handlers\");\n    data_container.removeListener('change', sendChange);\n  });\n  log(\"NEW CONNECTION ns_1\");\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Container.js"
      ],
      "names": [
        "DEBUG",
        "ActionTypes",
        "ACTION_MERGE",
        "actionDiff",
        "diff",
        "client",
        "type",
        "payload",
        "defaultReducer",
        "state",
        "Container",
        "middlewares",
        "defaultState",
        "stateAccessor",
        "s",
        "dispatch",
        "undefined",
        "reducer",
        "_stateAccessor",
        "self",
        "newreducer",
        "oldstate",
        "action",
        "emit",
        "retstate",
        "e",
        "id",
        "store",
        "applyMiddleware",
        "bind",
        "data",
        "getState",
        "EventEmitter",
        "connectContainer",
        "data_container",
        "socket",
        "log",
        "msg",
        "console",
        "sendChange",
        "sendReplace",
        "on",
        "change",
        "removeListener"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ales/projects/sharedredux-server/src",
      "sourcesContent": [
        "import { createStore, applyMiddleware, compose } from 'redux';\nimport { compare } from 'fast-json-patch';\nimport { apply_patch } from 'jsonpatch';\nimport EventEmitter from 'events';\nimport uuidv4 from 'uuid/v4';\n\nconst DEBUG = true;\n\nconst ActionTypes = {\n    ACTION_MERGE: \"@@MERGE_CLIENT\"\n};\n\nconst actionDiff = (diff, client) => ({\n    type: ActionTypes.ACTION_MERGE,\n    payload: {\n        diff,\n        client\n    }\n});\n\nconst defaultReducer = (state) => state;\n\nclass Container extends EventEmitter{\n    constructor({\n        middlewares = [], \n        defaultState = {}, \n        stateAccessor = (s) => s, \n        dispatch = undefined, \n        reducer = defaultReducer \n    } = {}){\n        super();\n\n        this._stateAccessor = stateAccessor;\n\n        const self = this;\n\n        const newreducer = (oldstate = defaultState, action) => {\n            const state = reducer(oldstate, action);\n\n            if(oldstate != state){\n                const diff = compare(oldstate, state);\n                self.emit('change', {diff});\n            }\n\n            switch(action.type){\n                case ActionTypes.ACTION_MERGE:\n                    const { diff, client } = action.payload;\n                    let retstate = state;\n                    try{\n                        retstate = apply_patch(state, diff);\n\n                        //notify change for other clients\n                        self.emit('change', {diff, client});\n                    }catch(e){\n                        //error during change >> revert client data\n                        self.emit(`replace_${client.id}`, state);\n                    }\n                    return retstate;\n                default:\n                    return state;\n            }\n        };\n\n        //here place your middlewares\n        this.store = createStore(newreducer, compose(\n                applyMiddleware(...middlewares),\n                // other store enhancers if any\n            )\n        );\n\n        this.dispatch = dispatch || this.store.dispatch.bind(this.store);\n    }\n    change(data, client){\n        if(data.diff){\n            this.dispatch(actionDiff(data.diff, client));\n        }\n    }\n    dispatch(action){\n        return this.dispatch(action);        \n    }\n    getState(){\n        return this._stateAccessor(this.store.getState());\n    }\n}\n\nexport default Container;\n\nexport function connectContainer(data_container, socket){\n    const client = { id: uuidv4() };\n    const log = (...msg) => {\n        if(DEBUG)\n            console.log(`${client.id}:`, ...msg);\n    };\n\n    const sendChange = (data) => {\n        if(!data.client || data.client.id === client.id)\n            return;\n\n        log(\"EMIT change\", data);\n        socket.emit('change', data);\n    };\n\n    const sendReplace = (state) => {\n        const data = {data: state || data_container.getState()};\n        log(\"EMIT replace\", data);\n        socket.emit('replace', data);    \n    }\n\n    data_container.on('change', sendChange);\n    data_container.on(`replace_${client.id}`, sendReplace);\n\n    //send replace on connect\n    sendReplace();\n\n    socket.on('change', (data) => {\n        log(\"RECV change\", data);\n        data_container.change(data, client);\n        log(data_container.getState());\n    });\n\n    socket.on('requestReplace', (data) => {\n        log(\"RECV requestReplace\", data);\n        sendReplace();\n    });\n\n\n    socket.on('disconnect', () => {\n        log(\"destroy event handlers\");\n        data_container.removeListener('change', sendChange);\n    });\n\n    log(\"NEW CONNECTION ns_1\");    \n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561258159561
  }
}